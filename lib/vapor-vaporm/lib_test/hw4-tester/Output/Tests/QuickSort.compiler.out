const vmt_QS
  :QS.Start
  :QS.Sort
  :QS.Print
  :QS.Init

func Main [in 0, out 2, local 3]
   $t0 = 12
   $t1 = HeapAllocZ($t0)
   local[0] = $t1
   $t0 = local[0]
   $t1 = :vmt_QS
   [$t0+0] = $t1
   $t0 = local[0]
   if $t0 goto :null1
   $t0 = "null pointer"
   Error($t0)
null1:
   $t0 = local[0]
   $t1 = local[1]
   $t1 = [$t0+0]
   local[1] = $t1
   $t0 = local[1]
   $t1 = local[1]
   $t1 = [$t0+0]
   local[1] = $t1
   $v0 = local[0]
   out[0] = $v0
   out[1] = 10
   $t0 = local[1]
   call $t0
   local[2] = $v0
   $t0 = local[2]
   PrintIntS($t0)
   ret

func QS.Start [in 2, out 3, local 8]
   $t0 = in[0]
   $t1 = local[0]
   $t1 = [$t0+0]
   local[0] = $t1
   $t0 = local[0]
   $t1 = local[0]
   $t1 = [$t0+12]
   local[0] = $t1
   $v0 = in[0]
   out[0] = $v0
   $v0 = in[1]
   out[1] = $v0
   $t0 = local[0]
   call $t0
   local[1] = $v0
   $t0 = in[0]
   $t1 = local[2]
   $t1 = [$t0+0]
   local[2] = $t1
   $t0 = local[2]
   $t1 = local[2]
   $t1 = [$t0+8]
   local[2] = $t1
   $v0 = in[0]
   out[0] = $v0
   $t0 = local[2]
   call $t0
   local[1] = $v0
   $t0 = 9999
   PrintIntS($t0)
   $t0 = in[0]
   $t1 = local[3]
   $t1 = [$t0+8]
   local[3] = $t1
   $t0 = local[3]
   $t1 = 1
   $t2 = Sub($t0 $t1)
   local[1] = $t2
   $t0 = in[0]
   $t1 = local[4]
   $t1 = [$t0+0]
   local[4] = $t1
   $t0 = local[4]
   $t1 = local[4]
   $t1 = [$t0+4]
   local[4] = $t1
   $v0 = in[0]
   out[0] = $v0
   out[1] = 0
   $v0 = local[1]
   out[2] = $v0
   $t0 = local[4]
   call $t0
   local[1] = $v0
   $t0 = in[0]
   $t1 = local[5]
   $t1 = [$t0+0]
   local[5] = $t1
   $t0 = local[5]
   $t1 = local[5]
   $t1 = [$t0+8]
   local[5] = $t1
   $v0 = in[0]
   out[0] = $v0
   $t0 = local[5]
   call $t0
   local[1] = $v0
   $v0 = 0
   ret

func QS.Sort [in 3, out 3, local 49]
   $t0 = 0
   local[0] = $t0
   $t0 = in[1]
   $t1 = in[2]
   $t2 = LtS($t0 $t1)
   local[1] = $t2
   $t0 = local[1]
   if0 $t0 goto :if1_else
   $t0 = in[0]
   $t1 = local[2]
   $t1 = [$t0+4]
   local[2] = $t1
   $t0 = local[2]
   if $t0 goto :null2
   $t0 = "null pointer"
   Error($t0)
null2:
   $t0 = local[2]
   $t1 = local[3]
   $t1 = [$t0+0]
   local[3] = $t1
   $t0 = in[2]
   $t1 = local[3]
   $t2 = Lt($t0 $t1)
   local[3] = $t2
   $t0 = local[3]
   if $t0 goto :bounds1
   $t0 = "array index out of bounds"
   Error($t0)
bounds1:
   $t0 = in[2]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[3] = $t2
   $t0 = local[3]
   $t1 = local[2]
   $t2 = Add($t0 $t1)
   local[3] = $t2
   $t0 = local[3]
   $t1 = local[4]
   $t1 = [$t0+4]
   local[4] = $t1
   $t0 = in[1]
   $t1 = 1
   $t2 = Sub($t0 $t1)
   local[5] = $t2
   $t0 = in[2]
   local[6] = $t0
   $t0 = 1
   local[7] = $t0
while1_top:
   $t0 = local[7]
   if0 $t0 goto :while1_end
   $t0 = 1
   local[8] = $t0
while2_top:
   $t0 = local[8]
   if0 $t0 goto :while2_end
   $t0 = local[5]
   $t1 = 1
   $t2 = Add($t0 $t1)
   local[5] = $t2
   $t0 = in[0]
   $t1 = local[9]
   $t1 = [$t0+4]
   local[9] = $t1
   $t0 = local[9]
   if $t0 goto :null3
   $t0 = "null pointer"
   Error($t0)
null3:
   $t0 = local[9]
   $t1 = local[10]
   $t1 = [$t0+0]
   local[10] = $t1
   $t0 = local[5]
   $t1 = local[10]
   $t2 = Lt($t0 $t1)
   local[10] = $t2
   $t0 = local[10]
   if $t0 goto :bounds2
   $t0 = "array index out of bounds"
   Error($t0)
bounds2:
   $t0 = local[5]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[10] = $t2
   $t0 = local[10]
   $t1 = local[9]
   $t2 = Add($t0 $t1)
   local[10] = $t2
   $t0 = local[10]
   $t1 = local[11]
   $t1 = [$t0+4]
   local[11] = $t1
   $t0 = local[11]
   $t1 = local[4]
   $t2 = LtS($t0 $t1)
   local[12] = $t2
   $t0 = 1
   $t1 = local[12]
   $t2 = Sub($t0 $t1)
   local[13] = $t2
   $t0 = local[13]
   if0 $t0 goto :if2_else
   $t0 = 0
   local[8] = $t0
   goto :if2_end
if2_else:
   $t0 = 1
   local[8] = $t0
if2_end:
   goto :while2_top
while2_end:
   $t0 = 1
   local[8] = $t0
while3_top:
   $t0 = local[8]
   if0 $t0 goto :while3_end
   $t0 = local[6]
   $t1 = 1
   $t2 = Sub($t0 $t1)
   local[6] = $t2
   $t0 = in[0]
   $t1 = local[14]
   $t1 = [$t0+4]
   local[14] = $t1
   $t0 = local[14]
   if $t0 goto :null4
   $t0 = "null pointer"
   Error($t0)
null4:
   $t0 = local[14]
   $t1 = local[15]
   $t1 = [$t0+0]
   local[15] = $t1
   $t0 = local[6]
   $t1 = local[15]
   $t2 = Lt($t0 $t1)
   local[15] = $t2
   $t0 = local[15]
   if $t0 goto :bounds3
   $t0 = "array index out of bounds"
   Error($t0)
bounds3:
   $t0 = local[6]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[15] = $t2
   $t0 = local[15]
   $t1 = local[14]
   $t2 = Add($t0 $t1)
   local[15] = $t2
   $t0 = local[15]
   $t1 = local[11]
   $t1 = [$t0+4]
   local[11] = $t1
   $t0 = local[4]
   $t1 = local[11]
   $t2 = LtS($t0 $t1)
   local[16] = $t2
   $t0 = 1
   $t1 = local[16]
   $t2 = Sub($t0 $t1)
   local[17] = $t2
   $t0 = local[17]
   if0 $t0 goto :if3_else
   $t0 = 0
   local[8] = $t0
   goto :if3_end
if3_else:
   $t0 = 1
   local[8] = $t0
if3_end:
   goto :while3_top
while3_end:
   $t0 = in[0]
   $t1 = local[18]
   $t1 = [$t0+4]
   local[18] = $t1
   $t0 = local[18]
   if $t0 goto :null5
   $t0 = "null pointer"
   Error($t0)
null5:
   $t0 = local[18]
   $t1 = local[19]
   $t1 = [$t0+0]
   local[19] = $t1
   $t0 = local[5]
   $t1 = local[19]
   $t2 = Lt($t0 $t1)
   local[19] = $t2
   $t0 = local[19]
   if $t0 goto :bounds4
   $t0 = "array index out of bounds"
   Error($t0)
bounds4:
   $t0 = local[5]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[19] = $t2
   $t0 = local[19]
   $t1 = local[18]
   $t2 = Add($t0 $t1)
   local[19] = $t2
   $t0 = local[19]
   $t1 = local[0]
   $t1 = [$t0+4]
   local[0] = $t1
   $t0 = in[0]
   $t1 = local[20]
   $t1 = [$t0+4]
   local[20] = $t1
   $t0 = local[20]
   if $t0 goto :null6
   $t0 = "null pointer"
   Error($t0)
null6:
   $t0 = local[20]
   $t1 = local[21]
   $t1 = [$t0+0]
   local[21] = $t1
   $t0 = local[5]
   $t1 = local[21]
   $t2 = Lt($t0 $t1)
   local[21] = $t2
   $t0 = local[21]
   if $t0 goto :bounds5
   $t0 = "array index out of bounds"
   Error($t0)
bounds5:
   $t0 = local[5]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[21] = $t2
   $t0 = local[21]
   $t1 = local[20]
   $t2 = Add($t0 $t1)
   local[21] = $t2
   $t0 = in[0]
   $t1 = local[22]
   $t1 = [$t0+4]
   local[22] = $t1
   $t0 = local[22]
   if $t0 goto :null7
   $t0 = "null pointer"
   Error($t0)
null7:
   $t0 = local[22]
   $t1 = local[23]
   $t1 = [$t0+0]
   local[23] = $t1
   $t0 = local[6]
   $t1 = local[23]
   $t2 = Lt($t0 $t1)
   local[23] = $t2
   $t0 = local[23]
   if $t0 goto :bounds6
   $t0 = "array index out of bounds"
   Error($t0)
bounds6:
   $t0 = local[6]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[23] = $t2
   $t0 = local[23]
   $t1 = local[22]
   $t2 = Add($t0 $t1)
   local[23] = $t2
   $t0 = local[23]
   $t1 = local[24]
   $t1 = [$t0+4]
   local[24] = $t1
   $t0 = local[21]
   $t1 = local[24]
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[25]
   $t1 = [$t0+4]
   local[25] = $t1
   $t0 = local[25]
   if $t0 goto :null8
   $t0 = "null pointer"
   Error($t0)
null8:
   $t0 = local[25]
   $t1 = local[26]
   $t1 = [$t0+0]
   local[26] = $t1
   $t0 = local[6]
   $t1 = local[26]
   $t2 = Lt($t0 $t1)
   local[26] = $t2
   $t0 = local[26]
   if $t0 goto :bounds7
   $t0 = "array index out of bounds"
   Error($t0)
bounds7:
   $t0 = local[6]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[26] = $t2
   $t0 = local[26]
   $t1 = local[25]
   $t2 = Add($t0 $t1)
   local[26] = $t2
   $t0 = local[26]
   $t1 = local[0]
   [$t0+4] = $t1
   $t0 = local[5]
   $t1 = 1
   $t2 = Add($t0 $t1)
   local[27] = $t2
   $t0 = local[6]
   $t1 = local[27]
   $t2 = LtS($t0 $t1)
   local[28] = $t2
   $t0 = local[28]
   if0 $t0 goto :if4_else
   $t0 = 0
   local[7] = $t0
   goto :if4_end
if4_else:
   $t0 = 1
   local[7] = $t0
if4_end:
   goto :while1_top
while1_end:
   $t0 = in[0]
   $t1 = local[29]
   $t1 = [$t0+4]
   local[29] = $t1
   $t0 = local[29]
   if $t0 goto :null9
   $t0 = "null pointer"
   Error($t0)
null9:
   $t0 = local[29]
   $t1 = local[30]
   $t1 = [$t0+0]
   local[30] = $t1
   $t0 = local[6]
   $t1 = local[30]
   $t2 = Lt($t0 $t1)
   local[30] = $t2
   $t0 = local[30]
   if $t0 goto :bounds8
   $t0 = "array index out of bounds"
   Error($t0)
bounds8:
   $t0 = local[6]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[30] = $t2
   $t0 = local[30]
   $t1 = local[29]
   $t2 = Add($t0 $t1)
   local[30] = $t2
   $t0 = in[0]
   $t1 = local[31]
   $t1 = [$t0+4]
   local[31] = $t1
   $t0 = local[31]
   if $t0 goto :null10
   $t0 = "null pointer"
   Error($t0)
null10:
   $t0 = local[31]
   $t1 = local[32]
   $t1 = [$t0+0]
   local[32] = $t1
   $t0 = local[5]
   $t1 = local[32]
   $t2 = Lt($t0 $t1)
   local[32] = $t2
   $t0 = local[32]
   if $t0 goto :bounds9
   $t0 = "array index out of bounds"
   Error($t0)
bounds9:
   $t0 = local[5]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[32] = $t2
   $t0 = local[32]
   $t1 = local[31]
   $t2 = Add($t0 $t1)
   local[32] = $t2
   $t0 = local[32]
   $t1 = local[33]
   $t1 = [$t0+4]
   local[33] = $t1
   $t0 = local[30]
   $t1 = local[33]
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[34]
   $t1 = [$t0+4]
   local[34] = $t1
   $t0 = local[34]
   if $t0 goto :null11
   $t0 = "null pointer"
   Error($t0)
null11:
   $t0 = local[34]
   $t1 = local[35]
   $t1 = [$t0+0]
   local[35] = $t1
   $t0 = local[5]
   $t1 = local[35]
   $t2 = Lt($t0 $t1)
   local[35] = $t2
   $t0 = local[35]
   if $t0 goto :bounds10
   $t0 = "array index out of bounds"
   Error($t0)
bounds10:
   $t0 = local[5]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[35] = $t2
   $t0 = local[35]
   $t1 = local[34]
   $t2 = Add($t0 $t1)
   local[35] = $t2
   $t0 = in[0]
   $t1 = local[36]
   $t1 = [$t0+4]
   local[36] = $t1
   $t0 = local[36]
   if $t0 goto :null12
   $t0 = "null pointer"
   Error($t0)
null12:
   $t0 = local[36]
   $t1 = local[37]
   $t1 = [$t0+0]
   local[37] = $t1
   $t0 = in[2]
   $t1 = local[37]
   $t2 = Lt($t0 $t1)
   local[37] = $t2
   $t0 = local[37]
   if $t0 goto :bounds11
   $t0 = "array index out of bounds"
   Error($t0)
bounds11:
   $t0 = in[2]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[37] = $t2
   $t0 = local[37]
   $t1 = local[36]
   $t2 = Add($t0 $t1)
   local[37] = $t2
   $t0 = local[37]
   $t1 = local[38]
   $t1 = [$t0+4]
   local[38] = $t1
   $t0 = local[35]
   $t1 = local[38]
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[39]
   $t1 = [$t0+4]
   local[39] = $t1
   $t0 = local[39]
   if $t0 goto :null13
   $t0 = "null pointer"
   Error($t0)
null13:
   $t0 = local[39]
   $t1 = local[40]
   $t1 = [$t0+0]
   local[40] = $t1
   $t0 = in[2]
   $t1 = local[40]
   $t2 = Lt($t0 $t1)
   local[40] = $t2
   $t0 = local[40]
   if $t0 goto :bounds12
   $t0 = "array index out of bounds"
   Error($t0)
bounds12:
   $t0 = in[2]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[40] = $t2
   $t0 = local[40]
   $t1 = local[39]
   $t2 = Add($t0 $t1)
   local[40] = $t2
   $t0 = local[40]
   $t1 = local[0]
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[41]
   $t1 = [$t0+0]
   local[41] = $t1
   $t0 = local[41]
   $t1 = local[41]
   $t1 = [$t0+4]
   local[41] = $t1
   $t0 = local[5]
   $t1 = 1
   $t2 = Sub($t0 $t1)
   local[42] = $t2
   $v0 = in[0]
   out[0] = $v0
   $v0 = in[1]
   out[1] = $v0
   $v0 = local[42]
   out[2] = $v0
   $t0 = local[41]
   call $t0
   local[43] = $v0
   $t0 = in[0]
   $t1 = local[44]
   $t1 = [$t0+0]
   local[44] = $t1
   $t0 = local[44]
   $t1 = local[44]
   $t1 = [$t0+4]
   local[44] = $t1
   $t0 = local[5]
   $t1 = 1
   $t2 = Add($t0 $t1)
   local[45] = $t2
   $v0 = in[0]
   out[0] = $v0
   $v0 = local[45]
   out[1] = $v0
   $v0 = in[2]
   out[2] = $v0
   $t0 = local[44]
   call $t0
   local[43] = $v0
   goto :if1_end
if1_else:
   $t0 = 0
   local[43] = $t0
if1_end:
   $v0 = 0
   ret

func QS.Print [in 1, out 0, local 7]
   $t0 = 0
   local[0] = $t0
while4_top:
   $t0 = in[0]
   $t1 = local[1]
   $t1 = [$t0+8]
   local[1] = $t1
   $t0 = local[0]
   $t1 = local[1]
   $t2 = LtS($t0 $t1)
   local[2] = $t2
   $t0 = local[2]
   if0 $t0 goto :while4_end
   $t0 = in[0]
   $t1 = local[3]
   $t1 = [$t0+4]
   local[3] = $t1
   $t0 = local[3]
   if $t0 goto :null14
   $t0 = "null pointer"
   Error($t0)
null14:
   $t0 = local[3]
   $t1 = local[4]
   $t1 = [$t0+0]
   local[4] = $t1
   $t0 = local[0]
   $t1 = local[4]
   $t2 = Lt($t0 $t1)
   local[4] = $t2
   $t0 = local[4]
   if $t0 goto :bounds13
   $t0 = "array index out of bounds"
   Error($t0)
bounds13:
   $t0 = local[0]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[4] = $t2
   $t0 = local[4]
   $t1 = local[3]
   $t2 = Add($t0 $t1)
   local[4] = $t2
   $t0 = local[4]
   $t1 = local[5]
   $t1 = [$t0+4]
   local[5] = $t1
   $t0 = local[5]
   PrintIntS($t0)
   $t0 = local[0]
   $t1 = 1
   $t2 = Add($t0 $t1)
   local[0] = $t2
   goto :while4_top
while4_end:
   $v0 = 0
   ret

func QS.Init [in 2, out 1, local 23]
   $t0 = in[0]
   $t1 = in[1]
   [$t0+8] = $t1
   $v0 = in[1]
   out[0] = $v0
   $t0 = :AllocArray
   call $t0
   local[0] = $v0
   $t0 = in[0]
   $t1 = local[0]
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[1]
   $t1 = [$t0+4]
   local[1] = $t1
   $t0 = local[1]
   if $t0 goto :null15
   $t0 = "null pointer"
   Error($t0)
null15:
   $t0 = local[1]
   $t1 = local[2]
   $t1 = [$t0+0]
   local[2] = $t1
   $t0 = 0
   $t1 = local[2]
   $t2 = Lt($t0 $t1)
   local[2] = $t2
   $t0 = local[2]
   if $t0 goto :bounds14
   $t0 = "array index out of bounds"
   Error($t0)
bounds14:
   $t0 = 0
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[2] = $t2
   $t0 = local[2]
   $t1 = local[1]
   $t2 = Add($t0 $t1)
   local[2] = $t2
   $t0 = local[2]
   $t1 = 20
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[3]
   $t1 = [$t0+4]
   local[3] = $t1
   $t0 = local[3]
   if $t0 goto :null16
   $t0 = "null pointer"
   Error($t0)
null16:
   $t0 = local[3]
   $t1 = local[4]
   $t1 = [$t0+0]
   local[4] = $t1
   $t0 = 1
   $t1 = local[4]
   $t2 = Lt($t0 $t1)
   local[4] = $t2
   $t0 = local[4]
   if $t0 goto :bounds15
   $t0 = "array index out of bounds"
   Error($t0)
bounds15:
   $t0 = 1
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[4] = $t2
   $t0 = local[4]
   $t1 = local[3]
   $t2 = Add($t0 $t1)
   local[4] = $t2
   $t0 = local[4]
   $t1 = 7
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[5]
   $t1 = [$t0+4]
   local[5] = $t1
   $t0 = local[5]
   if $t0 goto :null17
   $t0 = "null pointer"
   Error($t0)
null17:
   $t0 = local[5]
   $t1 = local[6]
   $t1 = [$t0+0]
   local[6] = $t1
   $t0 = 2
   $t1 = local[6]
   $t2 = Lt($t0 $t1)
   local[6] = $t2
   $t0 = local[6]
   if $t0 goto :bounds16
   $t0 = "array index out of bounds"
   Error($t0)
bounds16:
   $t0 = 2
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[6] = $t2
   $t0 = local[6]
   $t1 = local[5]
   $t2 = Add($t0 $t1)
   local[6] = $t2
   $t0 = local[6]
   $t1 = 12
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[7]
   $t1 = [$t0+4]
   local[7] = $t1
   $t0 = local[7]
   if $t0 goto :null18
   $t0 = "null pointer"
   Error($t0)
null18:
   $t0 = local[7]
   $t1 = local[8]
   $t1 = [$t0+0]
   local[8] = $t1
   $t0 = 3
   $t1 = local[8]
   $t2 = Lt($t0 $t1)
   local[8] = $t2
   $t0 = local[8]
   if $t0 goto :bounds17
   $t0 = "array index out of bounds"
   Error($t0)
bounds17:
   $t0 = 3
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[8] = $t2
   $t0 = local[8]
   $t1 = local[7]
   $t2 = Add($t0 $t1)
   local[8] = $t2
   $t0 = local[8]
   $t1 = 18
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[9]
   $t1 = [$t0+4]
   local[9] = $t1
   $t0 = local[9]
   if $t0 goto :null19
   $t0 = "null pointer"
   Error($t0)
null19:
   $t0 = local[9]
   $t1 = local[10]
   $t1 = [$t0+0]
   local[10] = $t1
   $t0 = 4
   $t1 = local[10]
   $t2 = Lt($t0 $t1)
   local[10] = $t2
   $t0 = local[10]
   if $t0 goto :bounds18
   $t0 = "array index out of bounds"
   Error($t0)
bounds18:
   $t0 = 4
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[10] = $t2
   $t0 = local[10]
   $t1 = local[9]
   $t2 = Add($t0 $t1)
   local[10] = $t2
   $t0 = local[10]
   $t1 = 2
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[11]
   $t1 = [$t0+4]
   local[11] = $t1
   $t0 = local[11]
   if $t0 goto :null20
   $t0 = "null pointer"
   Error($t0)
null20:
   $t0 = local[11]
   $t1 = local[12]
   $t1 = [$t0+0]
   local[12] = $t1
   $t0 = 5
   $t1 = local[12]
   $t2 = Lt($t0 $t1)
   local[12] = $t2
   $t0 = local[12]
   if $t0 goto :bounds19
   $t0 = "array index out of bounds"
   Error($t0)
bounds19:
   $t0 = 5
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[12] = $t2
   $t0 = local[12]
   $t1 = local[11]
   $t2 = Add($t0 $t1)
   local[12] = $t2
   $t0 = local[12]
   $t1 = 11
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[13]
   $t1 = [$t0+4]
   local[13] = $t1
   $t0 = local[13]
   if $t0 goto :null21
   $t0 = "null pointer"
   Error($t0)
null21:
   $t0 = local[13]
   $t1 = local[14]
   $t1 = [$t0+0]
   local[14] = $t1
   $t0 = 6
   $t1 = local[14]
   $t2 = Lt($t0 $t1)
   local[14] = $t2
   $t0 = local[14]
   if $t0 goto :bounds20
   $t0 = "array index out of bounds"
   Error($t0)
bounds20:
   $t0 = 6
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[14] = $t2
   $t0 = local[14]
   $t1 = local[13]
   $t2 = Add($t0 $t1)
   local[14] = $t2
   $t0 = local[14]
   $t1 = 6
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[15]
   $t1 = [$t0+4]
   local[15] = $t1
   $t0 = local[15]
   if $t0 goto :null22
   $t0 = "null pointer"
   Error($t0)
null22:
   $t0 = local[15]
   $t1 = local[16]
   $t1 = [$t0+0]
   local[16] = $t1
   $t0 = 7
   $t1 = local[16]
   $t2 = Lt($t0 $t1)
   local[16] = $t2
   $t0 = local[16]
   if $t0 goto :bounds21
   $t0 = "array index out of bounds"
   Error($t0)
bounds21:
   $t0 = 7
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[16] = $t2
   $t0 = local[16]
   $t1 = local[15]
   $t2 = Add($t0 $t1)
   local[16] = $t2
   $t0 = local[16]
   $t1 = 9
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[17]
   $t1 = [$t0+4]
   local[17] = $t1
   $t0 = local[17]
   if $t0 goto :null23
   $t0 = "null pointer"
   Error($t0)
null23:
   $t0 = local[17]
   $t1 = local[18]
   $t1 = [$t0+0]
   local[18] = $t1
   $t0 = 8
   $t1 = local[18]
   $t2 = Lt($t0 $t1)
   local[18] = $t2
   $t0 = local[18]
   if $t0 goto :bounds22
   $t0 = "array index out of bounds"
   Error($t0)
bounds22:
   $t0 = 8
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[18] = $t2
   $t0 = local[18]
   $t1 = local[17]
   $t2 = Add($t0 $t1)
   local[18] = $t2
   $t0 = local[18]
   $t1 = 19
   [$t0+4] = $t1
   $t0 = in[0]
   $t1 = local[19]
   $t1 = [$t0+4]
   local[19] = $t1
   $t0 = local[19]
   if $t0 goto :null24
   $t0 = "null pointer"
   Error($t0)
null24:
   $t0 = local[19]
   $t1 = local[20]
   $t1 = [$t0+0]
   local[20] = $t1
   $t0 = 9
   $t1 = local[20]
   $t2 = Lt($t0 $t1)
   local[20] = $t2
   $t0 = local[20]
   if $t0 goto :bounds23
   $t0 = "array index out of bounds"
   Error($t0)
bounds23:
   $t0 = 9
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[20] = $t2
   $t0 = local[20]
   $t1 = local[19]
   $t2 = Add($t0 $t1)
   local[20] = $t2
   $t0 = local[20]
   $t1 = 5
   [$t0+4] = $t1
   $v0 = 0
   ret

func AllocArray [in 1, out 0, local 3]
   $t0 = in[0]
   $t1 = 4
   $t2 = MulS($t0 $t1)
   local[0] = $t2
   $t0 = local[0]
   $t1 = 4
   $t2 = Add($t0 $t1)
   local[0] = $t2
   $t0 = local[0]
   $t1 = HeapAllocZ($t0)
   local[1] = $t1
   $t0 = local[1]
   $t1 = in[0]
   [$t0+0] = $t1
   $v0 = local[1]
   ret



